// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/cli-manager-operator/pkg/apis/climanager/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CLIManagerLister helps list CLIManagers.
// All objects returned here must be treated as read-only.
type CLIManagerLister interface {
	// List lists all CLIManagers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.CLIManager, err error)
	// CLIManagers returns an object that can list and get CLIManagers.
	CLIManagers(namespace string) CLIManagerNamespaceLister
	CLIManagerListerExpansion
}

// cLIManagerLister implements the CLIManagerLister interface.
type cLIManagerLister struct {
	indexer cache.Indexer
}

// NewCLIManagerLister returns a new CLIManagerLister.
func NewCLIManagerLister(indexer cache.Indexer) CLIManagerLister {
	return &cLIManagerLister{indexer: indexer}
}

// List lists all CLIManagers in the indexer.
func (s *cLIManagerLister) List(selector labels.Selector) (ret []*v1.CLIManager, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.CLIManager))
	})
	return ret, err
}

// CLIManagers returns an object that can list and get CLIManagers.
func (s *cLIManagerLister) CLIManagers(namespace string) CLIManagerNamespaceLister {
	return cLIManagerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CLIManagerNamespaceLister helps list and get CLIManagers.
// All objects returned here must be treated as read-only.
type CLIManagerNamespaceLister interface {
	// List lists all CLIManagers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.CLIManager, err error)
	// Get retrieves the CLIManager from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.CLIManager, error)
	CLIManagerNamespaceListerExpansion
}

// cLIManagerNamespaceLister implements the CLIManagerNamespaceLister
// interface.
type cLIManagerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CLIManagers in the indexer for a given namespace.
func (s cLIManagerNamespaceLister) List(selector labels.Selector) (ret []*v1.CLIManager, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.CLIManager))
	})
	return ret, err
}

// Get retrieves the CLIManager from the indexer for a given namespace and name.
func (s cLIManagerNamespaceLister) Get(name string) (*v1.CLIManager, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("climanager"), name)
	}
	return obj.(*v1.CLIManager), nil
}
