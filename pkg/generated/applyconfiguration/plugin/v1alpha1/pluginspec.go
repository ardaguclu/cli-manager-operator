// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// PluginSpecApplyConfiguration represents an declarative configuration of the PluginSpec type for use
// with apply.
type PluginSpecApplyConfiguration struct {
	ShortDescription *string                            `json:"shortDescription,omitempty"`
	Description      *string                            `json:"description,omitempty"`
	Caveats          *string                            `json:"caveats,omitempty"`
	Homepage         *string                            `json:"homepage,omitempty"`
	Version          *string                            `json:"version,omitempty"`
	Platforms        []PluginPlatformApplyConfiguration `json:"platforms,omitempty"`
}

// PluginSpecApplyConfiguration constructs an declarative configuration of the PluginSpec type for use with
// apply.
func PluginSpec() *PluginSpecApplyConfiguration {
	return &PluginSpecApplyConfiguration{}
}

// WithShortDescription sets the ShortDescription field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ShortDescription field is set to the value of the last call.
func (b *PluginSpecApplyConfiguration) WithShortDescription(value string) *PluginSpecApplyConfiguration {
	b.ShortDescription = &value
	return b
}

// WithDescription sets the Description field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Description field is set to the value of the last call.
func (b *PluginSpecApplyConfiguration) WithDescription(value string) *PluginSpecApplyConfiguration {
	b.Description = &value
	return b
}

// WithCaveats sets the Caveats field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Caveats field is set to the value of the last call.
func (b *PluginSpecApplyConfiguration) WithCaveats(value string) *PluginSpecApplyConfiguration {
	b.Caveats = &value
	return b
}

// WithHomepage sets the Homepage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Homepage field is set to the value of the last call.
func (b *PluginSpecApplyConfiguration) WithHomepage(value string) *PluginSpecApplyConfiguration {
	b.Homepage = &value
	return b
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *PluginSpecApplyConfiguration) WithVersion(value string) *PluginSpecApplyConfiguration {
	b.Version = &value
	return b
}

// WithPlatforms adds the given value to the Platforms field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Platforms field.
func (b *PluginSpecApplyConfiguration) WithPlatforms(values ...*PluginPlatformApplyConfiguration) *PluginSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithPlatforms")
		}
		b.Platforms = append(b.Platforms, *values[i])
	}
	return b
}
